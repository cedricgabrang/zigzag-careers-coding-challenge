@page "/"
@rendermode InteractiveServer
@using Library.Domain.Entities
@using Library.Web.Services
@inject IBookService BookService
@inject BookStateService BookState
@inject NavigationManager Navigation

<div class="container mx-auto p-6">
    <h3 class="text-3xl font-bold text-center mb-6">Books List</h3>

    @if (books == null)
    {
        <p class="text-gray-500 text-center">Loading...</p>
    }
    else if (!books.Any())
    {
        <p class="text-gray-500 text-center">No books available.</p>
    }
    else
    {
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var book in books)
            {
                <div class="bg-white shadow-lg rounded-lg overflow-hidden hover:shadow-xl transition-shadow duration-200">
                    <div class="p-4">
                        <h4 class="text-xl font-semibold mb-2">@book.Title</h4>
                        <p class="text-gray-700">Author: @book.Author</p>
                        <p class="text-gray-500">ISBN: @book.ISBN</p>
                        <p class="text-gray-500">Published: @book.PublishedDate</p>
                    </div>
                    <div class="flex justify-between p-4 border-t">
                        <button class="text-blue-500 hover:text-blue-700" @onclick="() => EditBook(book)">Edit</button>
                    </div>
                </div>
            }
        </div>
    }

    <div class="mt-6 text-center">
        <button class="bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600 transition-colors duration-200" @onclick="NavigateToAddBook">Add Book</button>
    </div>
</div>

@code {
    private IEnumerable<BookWithId> books;

    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetBooksAsync();
    }

    private void EditBook(BookWithId book)
    {
        BookState.SetBook(book);
        Navigation.NavigateTo($"/books/edit/{book.Id}");
    }

    private void NavigateToAddBook()
    {
        Navigation.NavigateTo("/books/edit");
    }
}
